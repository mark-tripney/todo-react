{"version":3,"sources":["components/Form.js","img/checkbox-logo.svg","components/Heading.js","components/Todo.js","components/TodoList.js","data.js","components/App.js","index.js"],"names":["Form","todoList","addTodo","useState","todoTitle","setTodoTitle","id","onSubmit","e","preventDefault","type","className","placeholder","aria-label","autoComplete","value","onChange","target","Heading","count","todos","handleDeleteCompleted","src","logo","alt","disabled","length","onClick","role","viewBox","version","xmlns","xmlnsXlink","stroke","strokeWidth","fill","fillRule","cx","cy","r","transform","x","y","width","height","Todo","todo","handleToggleCompleted","completed","currentTarget","name","TodoList","map","nanoid","data","App","setTodos","filter","activeCount","setActiveCount","filtered","newTodo","mappedCompletes","parseInt","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f5138d6.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nexport default function Form({todoList, addTodo}) {\n  const [todoTitle, setTodoTitle] = useState('');\n\n  const handleInputChange = e => {\n    setTodoTitle(e.target.value);\n  }\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    if (todoTitle) {\n      addTodo(todoTitle);\n      setTodoTitle('');\n    }\n  }\n\n  return (\n      <form id=\"form\" onSubmit={handleFormSubmit}>\n        <input\n            type=\"text\"\n            className=\"input\"\n            id=\"input\"\n            placeholder=\"Todo...\"\n            aria-label=\"Enter todo\"\n            autoComplete=\"off\"\n            value={todoTitle}\n            onChange={handleInputChange}\n        />\n      </form>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/checkbox-logo.48eae02d.svg\";","import React from 'react';\nimport logo from '../img/checkbox-logo.svg';\n\nconst Heading = ({count, todos, handleDeleteCompleted}) => {\n  return (\n      <>\n        <div className=\"heading\">\n          <h1>\n            {count ? count : ''} {count > 1 || count === 0 ? 'todos' : 'todo'}\n          </h1>\n          <img src={logo} id=\"logo\" alt=\"A tick within a square\"/>\n        </div>\n        <div className=\"delete-completed\">\n          <button\n              className=\"delete-completed-btn\"\n              disabled={count === todos.length}\n              onClick={handleDeleteCompleted}\n          >\n            <svg\n                className=\"delete-completed-svg\"\n                role=\"button\"\n                viewBox=\"0 0 400 400\"\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            >\n              <g\n                  id=\"Page-1\"\n                  stroke=\"none\"\n                  strokeWidth=\"1\"\n                  fill=\"none\"\n                  fillRule=\"evenodd\"\n              >\n                <g id=\"Delete-button\">\n                  <circle id=\"Oval\" fill=\"#ff0000\" cx=\"200\" cy=\"200\" r=\"200\"/>\n                  <g\n                      id=\"X\"\n                      transform=\"translate(78.000000, 78.000000)\"\n                      fill=\"#FFFFFF\"\n                  >\n                    <rect\n                        id=\"Rectangle\"\n                        transform=\"translate(122.000000, 122.000000) rotate(45.000000) translate(-122.000000, -122.000000) \"\n                        x=\"96\"\n                        y=\"-24\"\n                        width=\"52\"\n                        height=\"292\"\n                    />\n                    <rect\n                        id=\"Rectangle\"\n                        transform=\"translate(122.000000, 122.000000) rotate(315.000000) translate(-122.000000, -122.000000) \"\n                        x=\"96\"\n                        y=\"-24\"\n                        width=\"52\"\n                        height=\"292\"\n                    />\n                  </g>\n                </g>\n              </g>\n            </svg>\n          </button>\n          <h2>\n            {todos.length === 0\n                ? 'Nothing to remove'\n                : todos.length > 0 && count === todos.length\n                    ? 'No completed todos'\n                    : 'Remove completed todos'}\n          </h2>\n        </div>\n      </>\n  );\n};\n\nexport default Heading;\n","import React from 'react';\n\nexport default function Todo({todo, handleToggleCompleted}) {\n  function handleClick(e) {\n    e.preventDefault();\n    handleToggleCompleted(e.currentTarget.id);\n  }\n\n  return (\n      <li\n          id={todo.id}\n          className={todo.completed ? 'completed' : ''}\n          onClick={handleClick}\n      >\n        {todo.name}\n      </li>\n  );\n}\n","import React from 'react';\nimport Todo from './Todo';\nimport {nanoid} from 'nanoid';\n\nconst TodoList = ({todos, handleToggleCompleted}) => (\n    <ul>\n      {todos.map((todo) => (\n          <Todo\n              key={nanoid()}\n              todo={todo}\n              handleToggleCompleted={handleToggleCompleted}\n          />\n      ))}\n    </ul>\n);\n\nexport default TodoList;\n","const data = [];\n\nexport default data;\n","import React, {useState} from 'react';\nimport Form from './Form';\nimport Heading from './Heading';\nimport TodoList from './TodoList';\nimport data from '../data.js';\n\nfunction App() {\n  const [todos, setTodos] = useState(data);\n  const [activeCount, setActiveCount] = useState(\n      todos.filter((todo) => todo.completed === false).length\n  );\n\n  const addTodo = name => {\n    let newTodo = {id: todos.length + 1, name: name, completed: false};\n    setTodos([...todos, newTodo]);\n    setActiveCount(activeCount + 1);\n  }\n\n  const handleToggleCompleted = id => {\n    let mappedCompletes = todos.map((todo) =>\n        todo.id === parseInt(id)\n            ? {...todo, completed: !todo.completed}\n            : {...todo}\n    );\n    setTodos(mappedCompletes);\n    setActiveCount(\n        mappedCompletes.filter((todo) => todo.completed === false).length\n    );\n  };\n\n  const handleDeleteCompleted = () => {\n    let filtered = todos.filter((todo) => !todo.completed);\n    setTodos(filtered);\n  };\n\n  return (\n      <div className=\"todos\">\n        <Heading\n            count={activeCount}\n            todos={todos}\n            handleDeleteCompleted={handleDeleteCompleted}\n        />\n        <div className=\"wrapper\">\n          <Form addTodo={addTodo}/>\n          <TodoList todos={todos}\n                    handleToggleCompleted={handleToggleCompleted}/>\n        </div>\n        <small>Left-click or tap to toggle complete/incomplete.</small>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nconst DATA = [];\n\nrender(<App todos={DATA} />, document.getElementById('root'));\n"],"sourceRoot":""}