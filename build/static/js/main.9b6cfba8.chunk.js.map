{"version":3,"sources":["components/Form.js","img/checkbox-logo.svg","components/Heading.js","components/Todo.js","components/TodoList.js","data.js","components/App.js","index.js"],"names":["Form","todoList","addTodo","useState","todoTitle","setTodoTitle","id","onSubmit","e","preventDefault","type","className","placeholder","aria-label","autoComplete","value","onChange","target","Heading","count","todos","handleDeleteCompleted","src","logo","alt","disabled","length","onClick","role","viewBox","version","xmlns","xmlnsXlink","stroke","strokeWidth","fill","fillRule","cx","cy","r","transform","x","y","width","height","Todo","todo","handleToggleCompleted","completed","currentTarget","name","TodoList","map","nanoid","data","App","setTodos","filter","activeCount","setActiveCount","filtered","newTodo","mappedCompletes","parseInt","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b6cfba8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Form({ todoList, addTodo }) {\n  const [todoTitle, setTodoTitle] = useState(\"\");\n\n  function handleInputChange(e) {\n    setTodoTitle(e.target.value);\n  }\n\n  function handleFormSubmit(e) {\n    e.preventDefault();\n    if (todoTitle) {\n      addTodo(todoTitle);\n      setTodoTitle(\"\");\n    }\n  }\n\n  return (\n    <form id=\"form\" onSubmit={handleFormSubmit}>\n      {/* TODO: Placeholder text should be slightly lighter */}\n      <input\n        type=\"text\"\n        className=\"input\"\n        id=\"input\"\n        placeholder=\"Todo...\"\n        aria-label=\"Enter todo\"\n        autoComplete=\"off\"\n        value={todoTitle}\n        onChange={handleInputChange}\n      />\n    </form>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/checkbox-logo.48eae02d.svg\";","import React from \"react\";\nimport logo from \"../img/checkbox-logo.svg\";\n\nconst Heading = ({count, todos, handleDeleteCompleted}) => {\n  return (\n      <>\n        <div className=\"heading\">\n          <h1>\n            {count ? count : \"\"} {count > 1 || count === 0 ? \"todos\" : \"todo\"}\n          </h1>\n          <img src={logo} id=\"logo\" alt=\"A tick within a square\"/>\n        </div>\n        <div className=\"delete-completed\">\n          <button\n              className=\"delete-completed-btn\"\n              disabled={count === todos.length}\n              onClick={handleDeleteCompleted}\n          >\n            <svg\n                className=\"delete-completed-svg\"\n                role=\"button\"\n                viewBox=\"0 0 400 400\"\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n            >\n              {/*<title>Delete button</title>*/}\n              <g\n                  id=\"Page-1\"\n                  stroke=\"none\"\n                  strokeWidth=\"1\"\n                  fill=\"none\"\n                  fillRule=\"evenodd\"\n              >\n                <g id=\"Delete-button\">\n                  <circle id=\"Oval\" fill=\"#ff0000\" cx=\"200\" cy=\"200\" r=\"200\"/>\n                  <g\n                      id=\"X\"\n                      transform=\"translate(78.000000, 78.000000)\"\n                      fill=\"#FFFFFF\"\n                  >\n                    <rect\n                        id=\"Rectangle\"\n                        transform=\"translate(122.000000, 122.000000) rotate(45.000000) translate(-122.000000, -122.000000) \"\n                        x=\"96\"\n                        y=\"-24\"\n                        width=\"52\"\n                        height=\"292\"\n                    />\n                    <rect\n                        id=\"Rectangle\"\n                        transform=\"translate(122.000000, 122.000000) rotate(315.000000) translate(-122.000000, -122.000000) \"\n                        x=\"96\"\n                        y=\"-24\"\n                        width=\"52\"\n                        height=\"292\"\n                    />\n                  </g>\n                </g>\n              </g>\n            </svg>\n          </button>\n          <h2>\n            {todos.length === 0\n                ? \"Nothing to remove\"\n                : todos.length > 0 && count === todos.length\n                    ? \"No completed todos\"\n                    : \"Remove completed todos\"}\n          </h2>\n        </div>\n      </>\n  );\n};\n\nexport default Heading;\n","import React from \"react\";\n\nexport default function Todo({todo, handleToggleCompleted}) {\n  function handleClick(e) {\n    e.preventDefault();\n    handleToggleCompleted(e.currentTarget.id);\n  }\n\n  return (\n      <li\n          id={todo.id}\n          className={todo.completed ? \"completed\" : \"\"}\n          onClick={handleClick}\n      >\n        {todo.name}\n      </li>\n  );\n}\n","import React from \"react\";\nimport Todo from \"./Todo\";\nimport {nanoid} from \"nanoid\";\n\nconst TodoList = ({todos, handleToggleCompleted}) => (\n    <ul>\n        {todos.map((todo) => (\n            <Todo\n                key={nanoid()}\n                todo={todo}\n                handleToggleCompleted={handleToggleCompleted}\n            />\n        ))}\n    </ul>\n);\n\nexport default TodoList;\n","const data = [\n  {\n    id: 1,\n    name: 'First item',\n    completed: false,\n  },\n  {\n    id: 2,\n    name: 'Second item',\n    completed: true,\n  },\n  {\n    id: 3,\n    name: 'Third item',\n    completed: true,\n  },\n  {\n    id: 4,\n    name: 'Fourth item',\n    completed: false,\n  },\n]\n\nexport default data;","import React, {useState} from \"react\";\nimport Form from \"./Form\";\nimport Heading from \"./Heading\";\nimport TodoList from \"./TodoList\";\nimport data from \"../data.js\";\n\nfunction App() {\n  const [todos, setTodos] = useState(data);\n  const [activeCount, setActiveCount] = useState(\n      todos.filter((todo) => todo.completed === false).length\n  );\n\n  function addTodo(name) {\n    let newTodo = {id: todos.length + 1, name: name, completed: false};\n    setTodos([...todos, newTodo]);\n    setActiveCount(activeCount + 1);\n  }\n\n  const handleToggleCompleted = (id) => {\n    let mappedCompletes = todos.map((todo) =>\n        todo.id === parseInt(id)\n            ? {...todo, completed: !todo.completed}\n            : {...todo}\n    );\n    setTodos(mappedCompletes);\n    setActiveCount(\n        mappedCompletes.filter((todo) => todo.completed === false).length\n    );\n  };\n\n  const handleDeleteCompleted = () => {\n    let filtered = todos.filter(todo => !todo.completed);\n    setTodos(filtered);\n  };\n\n  return (\n      <div className=\"todos\">\n        <Heading count={activeCount} todos={todos} handleDeleteCompleted={handleDeleteCompleted}/>\n        <div className=\"wrapper\">\n          <Form addTodo={addTodo}/>\n          <TodoList todos={todos}\n                    handleToggleCompleted={handleToggleCompleted}/>\n        </div>\n        <small>Left-click to toggle complete/incomplete.</small>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport {render} from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nconst DATA = [\n  // {id: \"todo-0\", name: \"First task\", completed: false},\n  // {id: \"todo-1\", name: \"Second task\", completed: true},\n];\n\nrender(<App todos={DATA}/>, document.getElementById('root'));\n"],"sourceRoot":""}